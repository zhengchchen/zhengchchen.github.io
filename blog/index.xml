<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on zhengchengchen&#39;s blog</title>
    <link>https://zhengchengchen.com/blog/</link>
    <description>Recent content in Blogs on zhengchengchen&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright © 2023, Zheng Chengchen.</copyright>
    <lastBuildDate>Sun, 03 Dec 2023 19:06:29 +0800</lastBuildDate>
    <atom:link href="https://zhengchengchen.com/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Common programming concepts in Rust</title>
      <link>https://zhengchengchen.com/common-programming-concepts-in-rust/</link>
      <pubDate>Sun, 03 Dec 2023 19:06:29 +0800</pubDate>
      <guid>https://zhengchengchen.com/common-programming-concepts-in-rust/</guid>
      <description>变量与可变性 声明变量尽量使用 let 关键字 默认情况下，变量是不可变的（Immutable） 声明变量时，在变量名前加 mut，可以声明可变变量 变量与常量 常量（constant），常量在绑定值会也是不可变的，但是它与不可变变量有很多区别：
不能使用 mut，常量永远不可变
使用 const 声明，需要标注类型
可以在任何作用域内进行声明，包括全局作用域
常量只能绑定到常量表达式，而无法绑定到函数的调用结果或者只能在运行时才能计算的值
程序运行期间，常量在其声明的作用域内一直有效
命名规范：Rust 里常量使用全大写字母，每个单词之间用下划线分开，例如 MAX_POINT
const MAX_POINT: u32 = 100_000
shadowing 可使用相同名称的变量隐藏（shadowing）之前声明过的变量 在后续代码中这个变量名就是新的变量的值 shadowing 和 mut 的区别 使用 let 声明的关键字，如果重新给非 mut 变量赋值会导致编译失败 let 声明的同名新变量，也是不可变的 let 声明的同名新变量，类型可以和之前的不同，而 mut 的变量类型是不可更改的 数据类型 Rust 中数据类型分为标量和复合类型 Rust 是静态编译语言，编译器可以在使用时推断类型 但可能的类型如果过多，则必须添加类型标注，否则不能通过编译 标量类型 一个标量类型代表一个单个的值
Rust 中有四种主要的标量类型
整数类型： 没有小数部分，例如 u32 代表无符号整数，占据 32 位空间，有符号类型以 i 开头， isize 和 usize 的位数由程序运行的计算机的架构所决定，isize 和 usize 的使用场景主要是对某种集合进行索引操作 除了 byte （u8）类型外，数字字面值都可以使用类型后缀 ，例如 57u8 整数的默认类型为 i32 整数溢出：调试模式下编译，Rust 会检查整数溢出，如果发生移除，程序运行就会 panic，发布模式下编译，Rust 不会检查可能导致 panic 的整数溢出，如果发生溢出，Rust 进行环绕操作，例如 256u8 变成 0，257u8 变成 1 浮点类型 含有小数部分，f32 和 f64 Rust 使用 IEEE-754 标准描述浮点类型 浮点数的默认类型为 f64 布尔类型，符号为 bool，占一个字节 字符类型 char 类型被用来描述单个字符 字符类型字面量使用单引号 占 4 个字节 使用 Unicode 标量值，可以表示比 ASCLL 更多的内容：拼音、中日韩文、emoji 复合类型 复合类型可以将多个值放在一个类型中，Rust 提供了两种基础的复合类型：元组（Tuple）、数组</description>
    </item>
    <item>
      <title>rustup 和 cargo</title>
      <link>https://zhengchengchen.com/rustup-%E5%92%8C-cargo/</link>
      <pubDate>Wed, 01 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://zhengchengchen.com/rustup-%E5%92%8C-cargo/</guid>
      <description>&lt;p&gt;我们会通过  &lt;code&gt;rustup&lt;/code&gt;  下载 Rust，这是一个管理 Rust 版本和相关工具的命令行工具。Cargo 是 Rust 的构建系统和包管理器。大多数 Rustacean 们使用 Cargo 来管理他们的 Rust 项目，因为它可以为你处理很多任务，比如构建代码、下载依赖库并编译这些库。&lt;/p&gt;</description>
    </item>
    <item>
      <title>认识 package</title>
      <link>https://zhengchengchen.com/%E8%AE%A4%E8%AF%86-package/</link>
      <pubDate>Fri, 13 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://zhengchengchen.com/%E8%AE%A4%E8%AF%86-package/</guid>
      <description>&lt;p&gt;npm 是 node.js 原生自带的包管理工具（package manager），而 npmjs.org 是 node.js 官方包仓库，也被称为 npm registry。除了 npm 之外，还有诸多包管理工具，比如 yarn、pnpm 等。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
